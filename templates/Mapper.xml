<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package_name}.mappers.${model_name_pascal_case}Mapper">
    <sql id="${model_name_camel_case}Columns">
${column_list}
    </sql>

    <sql id="${model_name_camel_case}Tables">
        `${table_name}` `${model_name_snake_case}`
    </sql>

    <sql id="${model_name_camel_case}SearchWhere">
${search_where}
    </sql>

    <insert id="insert${model_name_pascal_case}" useGeneratedKeys="true" keyProperty="${model_name_camel_case}.id">
        INSERT INTO `${table_name}`(
        <if test="${model_name_camel_case}.id != 0">`id`,</if>
${name_list})
        VALUES(
        <if test="${model_name_camel_case}.id != 0">#{${model_name_camel_case}.id},</if>
${value_list})
    </insert>

    <insert id="insertOrUpdate${model_name_pascal_case}" useGeneratedKeys="true" keyProperty="${model_name_camel_case}.id">
        INSERT INTO `${table_name}`(
        <if test="${model_name_camel_case}.id != 0">`id`,</if>
${name_list})
        VALUES(
        <if test="${model_name_camel_case}.id != 0">#{${model_name_camel_case}.id},</if>
${value_list})
        ON DUPLICATE KEY UPDATE
${update_list}
    </insert>

    <update id="update${model_name_pascal_case}Partly">
        UPDATE `${table_name}` SET
${partly_update_list}
        WHERE `id` = #{request.id}
    </update>

    <delete id="delete${model_name_pascal_case}">
        DELETE FROM `${table_name}`
        WHERE `id` = #{id}
    </delete>

    <select id="select${model_name_pascal_case}ById" resultType="${package_name}.models.${model_name_pascal_case}">
        SELECT
        <include refid="${model_name_camel_case}Columns"/>
        FROM
        <include refid="${model_name_camel_case}Tables"/>
        WHERE `${model_name_snake_case}`.`id` = #{id}
        LIMIT 1
    </select>

    <select id="selectPaging${model_name_pascal_case_plural}" resultType="${package_name}.models.${model_name_pascal_case}">
        SELECT
        <include refid="${model_name_camel_case}Columns"/>
        FROM
        <include refid="${model_name_camel_case}Tables"/>
        <where>
            <include refid="${model_name_camel_case}SearchWhere"/>
        </where>
        <choose>
            <when test="request.sortOrders != null and request.sortOrders.size() != 0">
                ORDER BY
                <foreach collection="request.sortOrders" item="sortOrder" separator=",">
                    $${sortOrder.field} $${sortOrder.direction}
                </foreach>
            </when>
            <otherwise>
                ORDER BY ${orders}
            </otherwise>
        </choose>
        LIMIT #{request.paging.offset}, #{request.paging.pageSize}
    </select>

    <select id="select${model_name_pascal_case_plural}Count" resultType="Long">
        SELECT COUNT(*)
        FROM
        <include refid="${model_name_camel_case}Tables"/>
        <where>
            <include refid="${model_name_camel_case}SearchWhere"/>
        </where>
    </select>
</mapper>
